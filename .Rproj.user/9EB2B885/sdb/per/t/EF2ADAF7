{
    "collab_server" : "",
    "contents" : "require(dplyr)\n\n# load\n\naccel <- read.csv('data/raw_data/public_data/train/00001/acceleration.csv')\ntarget <- read.csv('data/raw_data/public_data/train/00001/targets.csv')\npir <- read.csv('data/raw_data/public_data/train/00001/pir.csv')\nvideo_hallway <- read.csv('data/raw_data/public_data/train/00001/video_hallway.csv')\nvideo_kitchen <- read.csv('data/raw_data/public_data/train/00001/video_kitchen.csv')\nvideo_living_room <- read.csv('data/raw_data/public_data/train/00001/video_living_room.csv')\n\n# accel features\n\nwindow_features <- function(t_start, t_end, df, cols){\n  \n  window_data = df[which(df$t >= t_start & df$t < t_end), cols, drop=F]\n  \n  # quantile's\n  res = unlist(lapply(window_data, quantile, names=F))\n  \n  # mean's\n  res = c(res, unlist(lapply(window_data, mean, na.rm=T)))\n  \n  # sd's\n  res = c(res, unlist(lapply(window_data, sd, na.rm=T)))\n  \n  # names\n  names(res) = c(unlist(lapply(1:length(cols), function(i){paste0(cols[i],'_W',t_end-t_start,'_',seq(0,100,25), 'Q')})),\n                 paste0(cols, '_W', t_end-t_start, '_mean'),\n                 paste0(cols, '_W', t_end-t_start, '_sd'))\n\n  return(res)\n}\n\nfeats = list()\ntargets = list()\n\nfor (i in 1:10){\n  \n  print(i)\n  \n  accel <- read.csv(paste0('data/raw_data/public_data/train/',sprintf('%05d',i),'/acceleration.csv'))\n  target <- read.csv(paste0('data/raw_data/public_data/train/',sprintf('%05d',i),'/targets.csv'))\n  \n  feat = lapply(1:target$end[nrow(target)], function(end){\n    #print(end)\n    return(c(window_features(t_start = end - 1, t_end = end, df = accel, cols = c('x','y','z')),\n             window_features(t_start = end - 2, t_end = end, df = accel, cols = c('x','y','z')),\n             window_features(t_start = end - 2, t_end = end, df = accel, cols = c('x','y','z'))))\n  }) %>% do.call(rbind, .) %>% as.data.frame(., col.names = c('x_W1_0Q','y','z'))\n  \n  feats[[i]] = feat[complete.cases(target),]\n  targets[[i]] = target[complete.cases(target), -(1:2)]\n}\n\n# find length of each df\nsplits = unlist(lapply(1:length(feats), function(i) nrow(feats[[i]])))\n\nfeats = do.call(rbind, feats) %>% as.data.frame\ntargets = do.call(rbind, targets) %>% as.data.frame\n\nwrite.table(feats, 'data/working/features/features1/feats1.csv', col.names = T, row.names = F, quote=F, sep=',')\nwrite.table(targets, 'data/working/features/features1/targets1.csv', col.names = T, row.names = F, quote=F, sep=',')\n\n\n\n\n\n\n",
    "created" : 1469035168818.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1621652757",
    "id" : "EF2ADAF7",
    "lastKnownWriteTime" : 1469035493,
    "last_content_update" : 1469035493425,
    "path" : "~/SPHERE-Challenge/code/preprocess/features1.R",
    "project_path" : "code/preprocess/features1.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}