require(dplyr)
installed.packages()
??xgboost
accel <- read.csv('data/raw_data/public_data/train/00001/acceleration.csv')
View(accel)
accel <- read.csv('data/raw_data/public_data/train/00001/acceleration.csv')
target <- read.csv('data/raw_data/public_data/train/00001/targets.csv')
pir <- read.csv('data/raw_data/public_data/train/00001/pir.csv')
video_hallway <- read.csv('data/raw_data/public_data/train/00001/video_hallway.csv')
video_kitchen <- read.csv('data/raw_data/public_data/train/00001/video_kitchen.csv')
video_living_room <- read.csv('data/raw_data/public_data/train/00001/video_living_room.csv')
View(target)
?quantil
?quantilw
?quantile
?lapply
t_start = 0
t_end = 1
cols =c('x', 'y', 'z')
df = accel
window_data = accel[which(accel$t >= t_start & accel$t < t_end), cols]
res = lapply(window_data, quantile, names=F)
res[[1]]
require(dplyr)
require(data.table)
accel <- read.csv('data/raw_data/public_data/train/00001/acceleration.csv') %>% data.table
lapply(window_data, quantile, names=F)
unlist(lapply(window_data, quantile, names=F))
diff(accel$t)
hist(diff(accel$t))
lapply(window_data, mean)
unlist(lapply(window_data, mean))
window_features <- function(t_start, t_end, df, cols){
window_data = accel[which(accel$t >= t_start & accel$t < t_end), cols]
# quantile's
res = unlist(lapply(window_data, quantile, names=F))
# mean's
res = c(res, unlist(lapply(window_data, mean, na.rm=T)))
# sd's
res = c(res, unlist(lapply(window_data, sd, na.rm=T)))
return(unname(res))
}
window_features(0,1,accel,c('x'))
window_features(0,1,accel,c('x','y'))
window_features <- function(t_start, t_end, df, cols){
window_data = df[which(df$t >= t_start & df$t < t_end), cols]
# quantile's
res = unlist(lapply(window_data, quantile, names=F))
# mean's
res = c(res, unlist(lapply(window_data, mean, na.rm=T)))
# sd's
res = c(res, unlist(lapply(window_data, sd, na.rm=T)))
return(unname(res))
}
window_features(0,1,accel,c('x','y'))
accel <- read.csv('data/raw_data/public_data/train/00001/acceleration.csv')
window_features(0,1,accel,c('x','y'))
window_features(0,1,accel,c('x'))
df[which(df$t >= t_start & df$t < t_end), c('x')]
df[which(df$t >= t_start & df$t < t_end), c('x'), with=F]
?data.frame
window_features <- function(t_start, t_end, df, cols){
window_data = df[which(df$t >= t_start & df$t < t_end), cols, drop=F]
# quantile's
res = unlist(lapply(window_data, quantile, names=F))
# mean's
res = c(res, unlist(lapply(window_data, mean, na.rm=T)))
# sd's
res = c(res, unlist(lapply(window_data, sd, na.rm=T)))
return(unname(res))
}
window_features(0,1,accel,c('x'))
window_features(0,1,accel,c('x','y'))
nrow(target)
feat = lapply(1:target$end[nrow(target)], function(end){
window_data(t_start = end - 1, t_end = end, df = accel, cols = c('x','y','z'))
}) %>% do.call(rbind, .) %>% as.data.frame
feat = lapply(1:target$end[nrow(target)], function(end){
print(end)
return(window_features(t_start = end - 1, t_end = end, df = accel, cols = c('x','y','z')))
}) %>% do.call(rbind, .) %>% as.data.frame
View(feat)
?as.data.frame
unlist(lapply(window_data, quantile, names=F))
lapply(window_data, quantile, names=F)
names(df[,cols, drop=F])
unlist(lapply(window_data, quantile, names=T))
seq(0,100,25)
paste0('x','_W',t_end-t_start,'_',seq(0,100,25), 'Q')
paste0(c('x','y'),'_W',t_end-t_start,'_',seq(0,100,25), 'Q')
length(cols)
unlist(lapply(1:length(cols), function(i){paste0(cols[i],'_W',t_end-t_start,'_',seq(0,100,25), 'Q')}))
paste0(cols, '1')
c(unlist(lapply(1:length(cols), function(i){paste0(cols[i],'_W',t_end-t_start,'_',seq(0,100,25), 'Q')})),
paste0(cols, '_W', t_end-t_start, '_mean'),
paste0(cols, '_W', t_end-t_start, 'sd'))
window_features <- function(t_start, t_end, df, cols){
window_data = df[which(df$t >= t_start & df$t < t_end), cols, drop=F]
# quantile's
res = unlist(lapply(window_data, quantile, names=F))
# mean's
res = c(res, unlist(lapply(window_data, mean, na.rm=T)))
# sd's
res = c(res, unlist(lapply(window_data, sd, na.rm=T)))
# names
names(res) = c(unlist(lapply(1:length(cols), function(i){paste0(cols[i],'_W',t_end-t_start,'_',seq(0,100,25), 'Q')})),
paste0(cols, '_W', t_end-t_start, '_mean'),
paste0(cols, '_W', t_end-t_start, '_sd'))
return(unname(res))
}
feat = lapply(1:target$end[nrow(target)], function(end){
print(end)
return(window_features(t_start = end - 1, t_end = end, df = accel, cols = c('x','y','z')))
}) %>% do.call(rbind, .) %>% as.data.frame(., col.names = c('x_W1_0Q','y','z'))
View(feat)
end=1
window_features(t_start = end - 1, t_end = end, df = accel, cols = c('x','y','z'))
window_features <- function(t_start, t_end, df, cols){
window_data = df[which(df$t >= t_start & df$t < t_end), cols, drop=F]
# quantile's
res = unlist(lapply(window_data, quantile, names=F))
# mean's
res = c(res, unlist(lapply(window_data, mean, na.rm=T)))
# sd's
res = c(res, unlist(lapply(window_data, sd, na.rm=T)))
# names
names(res) = c(unlist(lapply(1:length(cols), function(i){paste0(cols[i],'_W',t_end-t_start,'_',seq(0,100,25), 'Q')})),
paste0(cols, '_W', t_end-t_start, '_mean'),
paste0(cols, '_W', t_end-t_start, '_sd'))
return(res)
}
feat = lapply(1:target$end[nrow(target)], function(end){
print(end)
return(window_features(t_start = end - 1, t_end = end, df = accel, cols = c('x','y','z')))
}) %>% do.call(rbind, .) %>% as.data.frame(., col.names = c('x_W1_0Q','y','z'))
?complete.cases
complete.cases(target)
target[complete.cases(target)]
target[complete.cases(target),]
feat = feat[complete.cases(target),]
target = target[complete.cases(target),]
View(target)
target = target[complete.cases(target), -(1:2)]
?sprintf
sprintf(1)
sprintf('1')
sprintf('01')
sprintf('%05d',1)
window_features <- function(t_start, t_end, df, cols){
window_data = df[which(df$t >= t_start & df$t < t_end), cols, drop=F]
# quantile's
res = unlist(lapply(window_data, quantile, names=F))
# mean's
res = c(res, unlist(lapply(window_data, mean, na.rm=T)))
# sd's
res = c(res, unlist(lapply(window_data, sd, na.rm=T)))
# names
names(res) = c(unlist(lapply(1:length(cols), function(i){paste0(cols[i],'_W',t_end-t_start,'_',seq(0,100,25), 'Q')})),
paste0(cols, '_W', t_end-t_start, '_mean'),
paste0(cols, '_W', t_end-t_start, '_sd'))
return(res)
}
feats = list()
targets = list()
for (i in 1:10){
print(i)
accel <- read.csv(paste0('data/raw_data/public_data/train/',sprintf('%05d',i),'/acceleration.csv'))
target <- read.csv(paste0('data/raw_data/public_data/train/',sprintf('%05d',i),'/target.csv'))
feat = lapply(1:target$end[nrow(target)], function(end){
#print(end)
return(window_features(t_start = end - 1, t_end = end, df = accel, cols = c('x','y','z')))
}) %>% do.call(rbind, .) %>% as.data.frame(., col.names = c('x_W1_0Q','y','z'))
feats[[i]] = feat[complete.cases(target),]
targets[[i]] = target[complete.cases(target), -(1:2)]
}
feats = list()
targets = list()
for (i in 1:10){
print(i)
accel <- read.csv(paste0('data/raw_data/public_data/train/',sprintf('%05d',i),'/acceleration.csv'))
target <- read.csv(paste0('data/raw_data/public_data/train/',sprintf('%05d',i),'/targets.csv'))
feat = lapply(1:target$end[nrow(target)], function(end){
#print(end)
return(window_features(t_start = end - 1, t_end = end, df = accel, cols = c('x','y','z')))
}) %>% do.call(rbind, .) %>% as.data.frame(., col.names = c('x_W1_0Q','y','z'))
feats[[i]] = feat[complete.cases(target),]
targets[[i]] = target[complete.cases(target), -(1:2)]
}
lapply(1:target$end[nrow(target)], function(end){
#print(end)
return(window_features(t_start = end - 1, t_end = end, df = accel, cols = c('x','y','z')))
})
return(window_features(t_start = end - 1, t_end = end, df = accel, cols = c('x','y','z')))
end
end = 1
window_features(t_start = end - 1, t_end = end, df = accel, cols = c('x','y','z'))
c(window_features(t_start = end - 1, t_end = end, df = accel, cols = c('x','y','z')),
window_features(t_start = end - 2, t_end = end, df = accel, cols = c('x','y','z')),
window_features(t_start = end - 2, t_end = end, df = accel, cols = c('x','y','z')))
feats = list()
targets = list()
for (i in 1:10){
print(i)
accel <- read.csv(paste0('data/raw_data/public_data/train/',sprintf('%05d',i),'/acceleration.csv'))
target <- read.csv(paste0('data/raw_data/public_data/train/',sprintf('%05d',i),'/targets.csv'))
feat = lapply(1:target$end[nrow(target)], function(end){
#print(end)
return(c(window_features(t_start = end - 1, t_end = end, df = accel, cols = c('x','y','z')),
window_features(t_start = end - 2, t_end = end, df = accel, cols = c('x','y','z')),
window_features(t_start = end - 2, t_end = end, df = accel, cols = c('x','y','z'))))
}) %>% do.call(rbind, .) %>% as.data.frame(., col.names = c('x_W1_0Q','y','z'))
feats[[i]] = feat[complete.cases(target),]
targets[[i]] = target[complete.cases(target), -(1:2)]
}
feats = do.call(cbind, feats) %>% as.data.frame
targets = do.call(cbind, targets) %>% as.data.frame
feats = list()
targets = list()
for (i in 1:10){
print(i)
accel <- read.csv(paste0('data/raw_data/public_data/train/',sprintf('%05d',i),'/acceleration.csv'))
target <- read.csv(paste0('data/raw_data/public_data/train/',sprintf('%05d',i),'/targets.csv'))
feat = lapply(1:target$end[nrow(target)], function(end){
#print(end)
return(c(window_features(t_start = end - 1, t_end = end, df = accel, cols = c('x','y','z')),
window_features(t_start = end - 2, t_end = end, df = accel, cols = c('x','y','z')),
window_features(t_start = end - 2, t_end = end, df = accel, cols = c('x','y','z'))))
}) %>% do.call(rbind, .) %>% as.data.frame(., col.names = c('x_W1_0Q','y','z'))
feats[[i]] = feat[complete.cases(target),]
targets[[i]] = target[complete.cases(target), -(1:2)]
}
feats = do.call(rbind, feats) %>% as.data.frame
targets = do.call(rbind, targets) %>% as.data.frame
View(feats)
which(is.na(feats))
which(is.na(feats))[1]
which(is.na(feats[,1]))
which(is.na(feats[,1]))[1]
feats[2399,]
which(is.na(targets))
write.table(feats, 'data/working/features/features1/feats1.csv', col.names = T, row.names = F, quote=F, sep=',')
write.table(targets, 'data/working/features/features1/targets1.csv', col.names = T, row.names = F, quote=F, sep=',')
targets$a_ascend
hist(targets$a_ascend)
hist(targets$a_walk)
