?xgboost
feats1 = read.csv('data/working/features/features1/feats1.csv')
targets1 = read.csv('data/working/features/features1/targets1.csv')
library(xgboost)
View(targets1)
hist(targets1$a_ascend)
hist(targets1$a_ascend > 0)
hist(targets1$a_ascend > 0 %>% as.numeric)
require(A3)
hist(targets1$a_ascend > 0 %>% as.numeric)
dettach(A3)
detach(A3)
detach(A3)
require(dplyr)
hist(targets1$a_ascend > 0 %>% as.numeric)
hist((targets1$a_ascend > 0) %>% as.numeric)
table((targets1$a_ascend > 0) %>% as.numeric)
table((targets1$a_walk > 0) %>% as.numeric)
library(xgboost)
library(dplyr)
cweights = c(1.35298455691,1.38684574053,1.59587388404,1.35318713948,0.347783666015,0.661081706198,1.04723628621,0.398865222651,
0.207586320237,1.50578335208,0.110181365961,1.07803284435,1.36560417316,1.17024113802,1.1933637414,1.1803704493,
1.34414875433,1.11683830693,1.08083910312,0.503152249073)
params = list(booster = 'gbtree',
objective = 'reg:logistic',
eta = 0.1,
subsample=1,
colsample_bytree=1,
max_depth=2,
verbose=1,
silent=1,
nthread=3)
data <- lapply(1:20, function(c) xgb.DMatrix(data=data.matrix(feats1), label=as.numeric(targets1[,c]), missing=NA))
# folds are of length 1753 1642 1516 1537 1507 1392 1505 1668 1825 1779
folds = list(1:1753, 1754:3395, 3396:4911, 4912:6448, 6449:7955, 7956:9347, 9348:10852, 10853:12520, 12521:14345, 14346:16124)
booster_folds <- lapply(1:length(folds), function(k){
train = lapply(1:20, function(c) xgboost:::slice(data[[c]], folds[[k]]))
test = lapply(1:20, function(c) xgboost:::slice(data[[c]], unlist(folds[-k])))
booster = lapply(1:20, function(c) xgboost:::xgb.Booster(params, list(train[[c]], test[[c]])))
list(train=train, test=test, booster=booster)
})
?xgb.train
